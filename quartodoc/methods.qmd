---
title: "Computational Methods"
---

Unlike the original HyVR, models are now built using a Python script. For detailed documentation of all options, please refer to the API reference.

The recommended workflow is to first generate the major strata contact surfaces. Then, architectural elements and their internal heterogeneity are generated within each stratum according to a defined probability rule. Model building and grid assignment (facies, dip, and dip direction) are performed simultaneously.

Based on these values, you can define hydraulic parameters such as porosity, isotropic hydraulic conductivity, and the full hydraulic conductivity tensor, including any heterogeneity at the desired level.

![Hierarchical modeling framework implemented in HyVR.](../docs/img/hfm.png)

*Note: In this section, model input parameters are denoted as `parameter-section.parameter`.*

---

## Simulation of Strata and Architectural Element Contact Surfaces

Strata are defined by their bottom contact surfaces and the architectural elements they contain. The top contact surface is generated, and all model cells between the upper and lower surfaces are assigned to that stratum.

Random contact surfaces are generated using the Multi-Gaussian spectral methods outlined by Dietrich (1993). These methods require statistical parameters (mean and variance) and a geostatistical covariance model. In this study, we use a Gaussian covariance model to produce smoothly varying surfaces:

$$
R_{ss}(h) = \sigma^2_s \exp\left( - \left( \frac{\Delta x}{\lambda} \right)^2 \right)
$$

where $s$ is the random quantity of interest (e.g., elevation), $\sigma^2_s$ is its variance, $\Delta x$ is the distance between two points, and $\lambda$ is the correlation length.

Unlike the original HyVR, you must now select grid cells and determine whether they are above or below the contact surface. This can be easily done with NumPy, as shown in the examples.

You also need to create rules, typically based on probabilities, to assign architectural elements to a stratum. This usually begins with randomly selecting an architectural element from a predefined list, based on the probability of each element being chosen. The thickness of the element can be drawn from a random distribution, such as a normal distribution. To account for erosion, the algorithm can erode underlying units by assigning an object that intersects cells previously assigned to another unit. Therefore, the order in which objects are created is important.

---

## Simulation of Hydrofacies Assemblages and Geometries

The simulation of individual hydrofacies assemblages is object-based. You control the placement of objects, for example, by randomly placing features within an architectural element. Object-based methods are widely used in subsurface simulation (Jussel et al., 1994; Bennett & Hyman, 2017) because they are computationally efficient and relatively easy to parameterize.

HyVR approximates hydrofacies assemblages with simple geometric shapes. Currently, three shapes are supported: troughs (truncated ellipsoids), channels (extruded parabolas), and sheets. All features are "erosive," meaning they do not keep track of previously assigned facies; you must manage this yourself (see examples). As a result, architectural element and strata boundaries may be altered during the simulation.

![Geometries implemented in HyVR.](../docs/img/hyvr_geometries.png)

For each object, various properties must be assigned, such as placement and dimensions. A unique property is the facies code, which is assigned by the function according to facies assignment rules. *Dip direction* ($\kappa$) and *dip* ($\psi$) are properties associated with the bedding structure in each model grid cell, representing the angle of the bedding plane from the mean flow direction and the horizontal, respectively.

### Truncated Ellipsoids

Truncated ellipsoids are used as a proxy for trough-like or lens-shaped features. The method for generating the boundaries of these features has been described previously by Bennett & Hyman (2017). The internal structure of truncated ellipsoids can be defined in the following ways:

*   **Trough-wise homogeneous:** with constant azimuth and dip.
*   **Bulb-dip:** with azimuth and dip values based on the three-dimensional gradient at the ellipsoid boundary.
*   **Bulb-sets:** comprising nested, alternating hydrofacies with $\kappa$ and $\psi$ values generated as in the bulb-dip method.
